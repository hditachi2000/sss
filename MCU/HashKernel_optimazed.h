#ifndef HashKernel_optimazed_H
#define HashKernel_optimazed_H

#include<cstdint>
/**
 * @brief : bảng hash16 với kiểu dữ liệu uin16_t sẽ chiếm bộ nhớ 0.5 kB(so với 0.25 kB của hash8), nhưng đổi lại quá trình khởi tạo 
 *          các map và set nhanh và tiết kiệm RAM hơn -> tăng tốc thời gian xây dựng Data cho cây quyết định 
 * @pre : 
*/
class HashKernel_optimazer{
public :
  // Bảng tối ưu cho hashKernel với hasher từ 1-255 (uint8_t) . Tổng số va chạm trên toàn dải giá trị: 51719
  const uint8_t bestHasher8[255] = {1,1,3,25,6,10,49,10,8,10,47,30,9,17,89,31,187,34,182,21,226,57,79,129,23,73,109,219,182,248,36,52,
                                  74,5,100,185,198,228,40,86,216,99,22,16,97,82,27,247,202,151,239,127,3,155,114,111,137,119,67,142,
                                  111,29,101,198,209,15,77,196,223,75,87,172,161,85,81,93,55,181,172,236,170,8,196,83,237,218,129,3,
                                  111,119,1,163,217,200,254,127,201,232,225,103,160,25,229,42,5,32,237,50,42,114,229,9,230,231,30,96,
                                  34,125,223,53,215,250,76,72,253,46,156,202,82,171,186,184,88,185,125,177,238,141,11,252,241,186,195,
                                  142,77,86,60,72,46,14,74,134,160,25,212,120,3,34,219,102,6,186,245,70,70,229,146,60,148,167,243,210,
                                  121,18,69,62,89,221,197,63,133,15,20,3,255,2,106,18,169,56,184,252,117,38,107,132,180,16,184,78,19,61,
                                  48,153,71,81,116,208,216,211,141,197,11,109,243,225,44,229,246,175,162,32,247,207,237,177,94,150,48,
                                  166,72,29,203,193,105,49,9,201,70,170,93,235,70,172,170,253,188,40,219,120,141,155,77,151,101
                                };
// Bảng tối ưu cho hashKernel với hasher từ 1-65535 (uint16_t) . Tổng số va chạm trên toàn dải giá trị: 38568
  const uint16_t bestHasher16[255] = {1,1,8,33,2,2,77,282,539,1497,4273,6245,34590,1383,17103,22707,52992,9763,40165,44222,
                                  18451,52150,19417,10518,49686,11295,1651,10939,30738,22227,37651,56831,53091,25273,814,27339,10021,31067,43328,36576,
                                  65455,56350,5428,32885,38240,30862,56010,37136,33273,63899,30482,39358,19578,34925,13427,21798,6851,9347,49842,14140,
                                  38135,28193,55197,20407,28032,52976,53622,52191,42802,27246,50540,32814,30597,51831,22994,28097,33163,47063,11602,
                                  15228,29966,5480,38171,24971,13166,30826,3884,32844,6687,31642,59331,5546,65205,4010,23911,34097,36443,49972,47441,
                                  56703,1814,43651,61382,14453,22859,45954,55740,55270,43930,12124,30859,13235,30316,43940,17849,39782,41965,16244,
                                  54610,42448,46717,62312,60567,25746,56955,50310,13092,2120,42069,53249,33237,31438,24477,63436,14946,16191,20396,
                                  49416,2819,30951,31407,41596,56364,41602,56590,9038,28263,15101,41657,61496,50696,31785,48856,17612,61924,46117,
                                  24250,35678,36573,12924,50917,22907,48666,37208,6055,35471,40413,7596,62680,3200,46124,51214,42280,24252,54986,2243,
                                  54105,46359,22364,46360,29894,520,62221,2989,41421,26405,806,20769,58867,62091,14959,16858,51810,28599,26974,34430,
                                  59987,35837,20051,8761,25298,18116,26671,42278,8725,39669,3701,37314,10997,2259,45237,25829,59886,47244,61348,64300,
                                  27493,52557,54360,214,57265,64769,19996,50798,6917,6911,29486,24992,64926,28780,43752,22599,41482,9731,28048,20657,
                                  57759,15322,37125,30193,17277,34773,22423,26348,60494,63420,31116,55295,58734,49120,65068,21236,8800,21,1
                                };
  // tim uoc chung lon nhat
  uint8_t calStep(uint8_t a);
};

#endif    // HashKernel_optimazed_H